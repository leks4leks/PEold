<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style TargetType="{x:Type ToggleButton}" x:Key="MenuToggleButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="TextBlock.Foreground" Value="White"/>
        <Setter Property="TextBlock.FontSize" Value="16"/>
        <Setter Property="TextBlock.FontFamily" Value="Arial"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="Border" BorderThickness="1" Background="Transparent" BorderBrush="Transparent">
                        <ContentPresenter Name="ContentHost" Margin="8,3" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="true" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="White" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Foreground" Value="{StaticResource BlueColor2}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="White" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Foreground" Value="{StaticResource BlueColor2}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BlueColor1}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Opacity" Value="0.25" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type GridSplitter}" x:Key="MenuSplitter">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Arrow"/>
    </Style>


    <Style TargetType="{x:Type TabControl}" x:Key="TabControl">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel" Grid.Column="0" Grid.Row="0" IsItemsHost="True" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1"/>
                        <Border x:Name="ContentPanel" Grid.Column="0" Grid.Row="1" BorderBrush="White" BorderThickness="1" CornerRadius="0,5,5,5">
                            <Border x:Name="InnerBd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                    KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" CornerRadius="0,4,4,4">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"/>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="Red"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="ContentPanel" Value="Blue"/>
                            <Setter Property="Background" TargetName="InnerBd" Value="Green"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="5,5,5,0"/>
                            <Setter Property="CornerRadius" TargetName="InnerBd" Value="4,4,4,0"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="5,0,5,5"/>
                            <Setter Property="CornerRadius" TargetName="InnerBd" Value="4,0,4,4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBlock -->
    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlock">
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    
    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockTabHeader" BasedOn="{StaticResource TextBlock}">
        <Setter Property="FontSize" Value="15"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="MDTTextBlockCenter" BasedOn="{StaticResource TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="MDTTextBlockCenterWhite" BasedOn="{StaticResource MDTTextBlockCenter}">
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="MDTTextBlockLeft" BasedOn="{StaticResource TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="MDTTextBlockLeftWhite" BasedOn="{StaticResource MDTTextBlockLeft}">
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockContentHeader" BasedOn="{StaticResource TextBlock}">
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockCenter" BasedOn="{StaticResource TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockCenterBig" BasedOn="{StaticResource TextBlockCenter}">
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockCenterMedium" BasedOn="{StaticResource TextBlockCenter}">
        <Setter Property="FontSize" Value="18"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockCenterGreen" BasedOn="{StaticResource TextBlockCenter}">
        <Setter Property="Foreground" Value="{StaticResource Green}" />
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockCenterGreenSmall" BasedOn="{StaticResource TextBlockCenter}">
        <Setter Property="Foreground" Value="{StaticResource Green}" />
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockLeftGreenSmall" BasedOn="{StaticResource TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource Green}" />
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockCenterGrayMedium" BasedOn="{StaticResource TextBlockCenter}">
        <Setter Property="Foreground" Value="{StaticResource Gray}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockPaddingBold" BasedOn="{StaticResource TextBlock}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="10 10 0 5"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockCenterOrange" BasedOn="{StaticResource TextBlockCenter}">
        <Setter Property="Foreground" Value="{StaticResource Orange}" />
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockCenterRed" BasedOn="{StaticResource TextBlockCenter}">
        <Setter Property="Foreground" Value="{StaticResource Red}" />
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <!-- Rectangle -->
    <Style x:Key="MDTRectangleLightGray" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{StaticResource LightGray}"/>
    </Style>
    
    <Style x:Key="MDTRectangleGray" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{StaticResource Gray}"/>
    </Style>

    <Style x:Key="MDTRectangleBlue" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="#FF3F669F"/>
    </Style>

    <Style x:Key="MDTRectangleWhite" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="White"/>
    </Style>

    <Style x:Key="MDTRectangleGreen" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="#66bb6a"/>
    </Style>

</ResourceDictionary>